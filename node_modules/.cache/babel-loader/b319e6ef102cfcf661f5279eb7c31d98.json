{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\githup\\\\React\\\\TodoCalender\\\\react-todo-calendar\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfDay';\nimport getDay from 'date-fns/getDay';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport React, { useState, useEffect, Component } from 'react';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport sv from \"date-fns/locale/sv\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TodoList from './TodoList';\nimport { v4 } from 'uuid';\nimport moment from 'moment'; //import Holiday from './Components/Holiday';\n\nimport axios from 'axios';\nimport { lastDayOfMonth } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"sv\", sv);\nconst locales = {\n  \"sv\": sv\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n}); //const holidays= []\n\nconst events = [];\nconst LocalStorage = 'TodoApp';\nconst holidays = [];\n\nfunction App() {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({\n    title: \"\",\n    start: \"\",\n    done: false\n  });\n  const [allEvents, setAllEvents] = useState(events);\n  const [allHolidays, setAllHolidays] = useState({\n    title: \"\",\n    start: \"\"\n  }); //Holidays  API ?????????????\n\n  axios('https://sholiday.faboul.se/dagar/v2.1/2021').then(response => {\n    //console.log(response.data.dagar);\n    //const holiday= allHolidays.filter(holidayEvents=>holidayEvents=!null)\n    setAllHolidays({ ...allHolidays,\n      title: response.data.dagar.filter(holiday => holiday.helgdag)\n    });\n    console.log(allHolidays); //   setAllHolidays({title:response.data.dagar[i].helgdag , start:response.data.dagar[i].datum})\n  }); // Store events to Local storage \n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LocalStorage));\n    if (storedTodos) setAllEvents(storedTodos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LocalStorage, JSON.stringify(allEvents));\n  }, [allEvents]); //Function for adding new event on clickind Add Event button \n\n  function handleAddEvent() {\n    setAllEvents(prevAllEvents => {\n      return [...prevAllEvents, {\n        title: newEvent.title,\n        start: newEvent.start,\n        done: false,\n        id: v4()\n      }];\n    });\n  } // Function for changing the events status to done \n\n\n  function toggleTodo(id) {\n    const newEvents = [...allEvents];\n    const doneEvent = newEvents.find(doneEvent => doneEvent.id === id);\n    doneEvent.done = !doneEvent.done;\n    setAllEvents(newEvents);\n  }\n\n  const handleClearEvent = () => {\n    const clearDoneEvent = allEvents.filter(clearEvents => !clearEvents.done);\n    setAllEvents(clearDoneEvent);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add text\",\n      style: {\n        width: \"20%\",\n        marginRighr: \"10px\"\n      },\n      value: newEvent.title,\n      onChange: e => setNewEvent({ ...newEvent,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      placeholderText: \"Start Date\",\n      selected: newEvent.start,\n      locale: \"sv\",\n      onChange: start => setNewEvent({ ...newEvent,\n        start\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: \"10px \"\n      },\n      onClick: handleAddEvent,\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: allEvents,\n      startAccessor: \"start\",\n      endAccessor: \"start\",\n      style: {\n        height: 500,\n        margin: \"150px\"\n      },\n      value: allEvents.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '100px',\n        width: '80%',\n        boxShadow: '10px 10px 10px 10px black',\n        background: 'lightgray',\n        fontSize: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '20px',\n          boxShadow: '5px 5px 5px 5px black',\n          background: 'lightgray'\n        },\n        children: [allEvents.filter(allEvents => !allEvents.done).length, \" left to do\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        allEvents: allEvents,\n        toggleTodo: toggleTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearEvent,\n        style: {\n          margin: '100px',\n          width: '50%',\n          boxShadow: '10px 10px 10px 10px black',\n          fontWeight: 'bold',\n          fontSize: '20px'\n        },\n        children: \" Clear Done Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rvRiJ4vQns96IciEHwSk1T0c7gY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/githup/React/TodoCalender/react-todo-calendar/src/App.js"],"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","React","useState","useEffect","Component","DatePicker","registerLocale","sv","TodoList","v4","moment","axios","lastDayOfMonth","locales","localizer","events","LocalStorage","holidays","App","newEvent","setNewEvent","title","start","done","allEvents","setAllEvents","allHolidays","setAllHolidays","then","response","data","dagar","filter","holiday","helgdag","console","log","storedTodos","JSON","localStorage","getItem","setItem","stringify","handleAddEvent","prevAllEvents","id","toggleTodo","newEvents","doneEvent","find","handleClearEvent","clearDoneEvent","clearEvents","width","marginRighr","e","target","value","marginTop","height","margin","marginLeft","boxShadow","background","fontSize","fontWeight","length"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport {Calendar , dateFnsLocalizer} from 'react-big-calendar';\r\nimport format from 'date-fns/format';\r\nimport parse from 'date-fns/parse';\r\nimport startOfWeek from 'date-fns/startOfDay';\r\nimport getDay from 'date-fns/getDay';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport React, {useState, useEffect,  Component } from 'react';\r\nimport DatePicker ,{registerLocale} from 'react-datepicker';\r\nimport sv from \"date-fns/locale/sv\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport TodoList from './TodoList';\r\nimport { v4 } from 'uuid';\r\nimport moment from 'moment';\r\n//import Holiday from './Components/Holiday';\r\nimport axios from 'axios'\r\nimport { lastDayOfMonth } from 'date-fns';\r\nregisterLocale(\"sv\", sv);\r\n\r\n\r\nconst locales = {\r\n\r\n  \"sv\" :sv\r\n}\r\n\r\nconst localizer = dateFnsLocalizer({\r\n  format,\r\n  parse,\r\n  startOfWeek,\r\n  getDay,\r\n  locales\r\n})\r\n//const holidays= []\r\n\r\nconst events =[]\r\nconst LocalStorage ='TodoApp'\r\nconst holidays=[]\r\n  \r\n\r\nfunction App() {\r\n\r\n   const [newEvent, setNewEvent] = useState({title:\"\", start:\"\"  , done:false})\r\n   const [allEvents, setAllEvents] = useState(events)\r\n   \r\n   const [allHolidays, setAllHolidays] = useState({title:\"\", start:\"\"  })\r\n//Holidays  API ?????????????\r\n\r\naxios('https://sholiday.faboul.se/dagar/v2.1/2021')\r\n .then(response => {\r\n    //console.log(response.data.dagar);\r\n    //const holiday= allHolidays.filter(holidayEvents=>holidayEvents=!null)\r\n    setAllHolidays({...allHolidays,title:response.data.dagar.filter(holiday=>holiday.helgdag)})\r\n  console.log(allHolidays);\r\n  //   setAllHolidays({title:response.data.dagar[i].helgdag , start:response.data.dagar[i].datum})\r\n    })\r\n  \r\n   \r\n\r\n// Store events to Local storage \r\n\r\nuseEffect(()=>{\r\n  \r\n  const storedTodos=JSON.parse(localStorage.getItem(LocalStorage))\r\n  if (storedTodos) setAllEvents(storedTodos)\r\n},[])\r\n\r\n\r\nuseEffect(()=>{\r\n  localStorage.setItem(LocalStorage , JSON.stringify(allEvents))\r\n},[allEvents])\r\n\r\n//Function for adding new event on clickind Add Event button \r\nfunction handleAddEvent(){\r\n  setAllEvents(prevAllEvents =>{\r\n    return [...prevAllEvents , {title:newEvent.title, start:newEvent.start  , done:false , id:v4()}]\r\n  })\r\n  \r\n}\r\n\r\n// Function for changing the events status to done \r\nfunction toggleTodo(id){\r\n  const newEvents=[... allEvents]\r\n  \r\n  const doneEvent=newEvents.find(doneEvent=> doneEvent.id ===id )\r\n  doneEvent.done =! doneEvent.done\r\n  setAllEvents(newEvents)\r\n}\r\n  const handleClearEvent = ()=>{\r\n    const clearDoneEvent=allEvents.filter(clearEvents=>!clearEvents.done)\r\n    setAllEvents(clearDoneEvent)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Todo Calendar</h1>\r\n      <input type=\"text\" placeholder=\"Add text\" style={{width:\"20%\", marginRighr:\"10px\"}} value={newEvent.title} onChange={(e)=> setNewEvent({...newEvent,title: e.target.value})}/>\r\n      \r\n      <DatePicker placeholderText=\"Start Date\" \r\n            selected={newEvent.start} locale=\"sv\" onChange={(start)=> setNewEvent({...newEvent , start})} />\r\n      <button style={{marginTop: \"10px \"}} onClick={handleAddEvent}>Add Event</button>\r\n      \r\n      <Calendar localizer={localizer} events={allEvents} \r\n      startAccessor =\"start\" endAccessor=\"start\" style={{height:500 , margin:\"150px\"}} value={allEvents.title} />\r\n      <div style={{marginLeft:'100px' ,width:'80%' ,boxShadow:'10px 10px 10px 10px black',background:'lightgray',fontSize:'20px' }}>\r\n     \r\n        <div style={{fontWeight:'bold',fontSize:'20px' ,boxShadow:'5px 5px 5px 5px black',background:'lightgray'}}>\r\n             {allEvents.filter(allEvents=>!allEvents.done).length} left to do \r\n        </div>\r\n        <br/>\r\n        < TodoList allEvents={allEvents} toggleTodo={toggleTodo}  />\r\n      \r\n        <button onClick={handleClearEvent} style={{margin:'100px' ,width:'50%' ,boxShadow:'10px 10px 10px 10px black',fontWeight:'bold',fontSize:'20px' }}> Clear Done Events</button>\r\n        <br/>\r\n      </div>\r\n     \r\n      \r\n  \r\n      \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}