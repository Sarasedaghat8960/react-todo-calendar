{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\githup\\\\React\\\\TodoCalender\\\\react-todo-calendar\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfDay';\nimport getDay from 'date-fns/getDay';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport sv from \"date-fns/locale/sv\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TodoList from './TodoList';\nimport { v4 } from 'uuid';\nimport moment from 'moment';\nimport Form from './Form';\nimport axios from 'axios';\nimport { lastDayOfMonth } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"sv\", sv);\nconst locales = {\n  \"sv\": sv\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst LocalStorage = 'TodoApp';\n\nfunction App() {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({\n    title: \"\",\n    start: \"\",\n    done: false\n  });\n  const [allEvents, setAllEvents] = useState([]);\n  const [allHolidays, setAllHolidays] = useState([]);\n  const [localStor, setLocalStor] = useState([]);\n  let count = 0;\n  let click = 0; // Change the color of events \n\n  function eventPropGetter(allEvents) {\n    let newStyle = {\n      backgroundColor: \"lightgreen\",\n      color: 'black',\n      borderRadius: \"5px\",\n      border: \"none\"\n    };\n\n    if (allEvents.holiday) {\n      newStyle.backgroundColor = \"red\";\n    }\n\n    return {\n      className: \"\",\n      style: newStyle\n    };\n  } //Fetch Holidays  API \n  //const allEventsRef = useRef(allEvents);\n\n\n  const storedTodos = JSON.parse(localStorage.getItem(LocalStorage));\n  useEffect(() => {\n    //console.log('allEventsRef.current',allEventsRef.current);\n    // if (allEvents !== allEventsRef.current) {\n    let year = moment(\"2021\").format('YYYY');\n    axios(`https://sholiday.faboul.se/dagar/v2.1/` + year).then(response => {\n      const holDay = response.data.dagar.filter(holiday => holiday.helgdag).map(function (holidayEvents) {\n        return {\n          title: holidayEvents.helgdag,\n          start: holidayEvents.datum,\n          id: v4(),\n          done: false,\n          holiday: 'Ja'\n        };\n      });\n      console.log('holDay', holDay);\n      setAllEvents(holDay);\n      console.log('allEvents ', allEvents);\n    }); // }   \n  }, [storedTodos]); // Store events to Local storage \n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LocalStorage));\n    console.log('storedToDoes:', storedTodos);\n    if (storedTodos) setAllEvents(storedTodos);\n    console.log('saved storage', localStorage.getItem(LocalStorage));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LocalStorage, JSON.stringify(allEvents));\n    console.log('localstorage', localStorage.getItem(LocalStorage));\n  }, [allEvents]); //Function for adding new event on clicking Add Event button \n\n  function handleAddEvent() {\n    if (newEvent.title) {\n      setAllEvents(prevAllEvents => {\n        return [...prevAllEvents, {\n          title: newEvent.title,\n          start: newEvent.start,\n          id: v4(),\n          workDay: 'Ja',\n          done: false\n        }];\n      });\n      click++;\n    }\n  } //Function for deleting done  events on clickind clear Event button \n\n\n  const handleClearEvent = () => {\n    const clearDoneEvent = allEvents.filter(clearEvents => !clearEvents.done);\n    setAllEvents(clearDoneEvent);\n  }; // Function for changing the events status to done \n\n\n  function toggleTodo(id) {\n    const toggleEvents = [...allEvents];\n    const doneEvent = toggleEvents.find(doneEvent => doneEvent.id === id);\n    doneEvent.done = !doneEvent.done;\n    setAllEvents(toggleEvents);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      newEvent: newEvent,\n      handleAddEvent: handleAddEvent,\n      setNewEvent: setNewEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: allEvents,\n      startAccessor: \"start\",\n      endAccessor: \"start\",\n      style: {\n        height: 500,\n        marginLeft: \"150px\",\n        marginRight: \"150px\",\n        marginBottom: \"50px\"\n      },\n      value: allEvents.title,\n      eventPropGetter: eventPropGetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '0PX 10% 50PX 10%',\n        width: '80%',\n        boxShadow: '10px 10px 10px 10px black',\n        background: 'lightgray',\n        fontSize: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '20px',\n          boxShadow: '5px 5px 5px 5px black'\n        },\n        children: [allEvents.filter(allEvents => {\n          return !allEvents.done && allEvents.workDay;\n        }).length, \" left to do\", console.log(allEvents)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        allEvents: allEvents.filter(events => events.workDay),\n        toggleTodo: toggleTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearEvent,\n        style: {\n          margin: '50PX 30% 50PX 25%',\n          width: '50%',\n          boxShadow: '10px 10px 10px 10px black',\n          fontWeight: 'bold',\n          fontSize: '20px',\n          borderRadius: '10px'\n        },\n        children: \" Clear Done Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Q3F60+35FC0nPr1njOF+FET9ERg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/githup/React/TodoCalender/react-todo-calendar/src/App.js"],"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","React","useState","useEffect","useRef","DatePicker","registerLocale","sv","TodoList","v4","moment","Form","axios","lastDayOfMonth","locales","localizer","LocalStorage","App","newEvent","setNewEvent","title","start","done","allEvents","setAllEvents","allHolidays","setAllHolidays","localStor","setLocalStor","count","click","eventPropGetter","newStyle","backgroundColor","color","borderRadius","border","holiday","className","style","storedTodos","JSON","localStorage","getItem","year","then","response","holDay","data","dagar","filter","helgdag","map","holidayEvents","datum","id","console","log","setItem","stringify","handleAddEvent","prevAllEvents","workDay","handleClearEvent","clearDoneEvent","clearEvents","toggleTodo","toggleEvents","doneEvent","find","height","marginLeft","marginRight","marginBottom","margin","width","boxShadow","background","fontSize","fontWeight","length","events"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport {Calendar , dateFnsLocalizer} from 'react-big-calendar';\r\nimport format from 'date-fns/format';\r\nimport parse from 'date-fns/parse';\r\nimport startOfWeek from 'date-fns/startOfDay';\r\nimport getDay from 'date-fns/getDay';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport React, {useState, useEffect,useRef  } from 'react';\r\nimport DatePicker ,{registerLocale} from 'react-datepicker';\r\nimport sv from \"date-fns/locale/sv\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport TodoList from './TodoList';\r\nimport { v4 } from 'uuid';\r\nimport moment from 'moment';\r\nimport Form from './Form';\r\nimport axios from 'axios'\r\nimport { lastDayOfMonth } from 'date-fns';\r\nregisterLocale(\"sv\", sv);\r\n\r\n\r\nconst locales = {\r\n\r\n  \"sv\" :sv\r\n}\r\n\r\nconst localizer = dateFnsLocalizer({\r\n  format,\r\n  parse,\r\n  startOfWeek,\r\n  getDay,\r\n  locales\r\n})\r\n \r\n\r\n\r\nconst LocalStorage ='TodoApp'\r\n\r\n  \r\n\r\n function App() {\r\n\r\n   const [newEvent, setNewEvent] = useState({title:\"\", start:\"\"  , done:false })\r\n   const [allEvents, setAllEvents] = useState([])\r\n   const [allHolidays, setAllHolidays] = useState([])\r\n   const [localStor,setLocalStor]=useState([])\r\n   let count=0\r\n   let click=0\r\n   \r\n // Change the color of events \r\n  function eventPropGetter(allEvents){ \r\n    let newStyle = {\r\n      backgroundColor: \"lightgreen\",\r\n      color: 'black',\r\n      borderRadius: \"5px\",\r\n      border: \"none\"\r\n    };\r\n\r\n    if (allEvents.holiday){\r\n      newStyle.backgroundColor = \"red\"\r\n     \r\n    }\r\n\r\n    return {\r\n      className: \"\",\r\n      style: newStyle\r\n    };\r\n  }\r\n  \r\n\r\n\r\n\r\n //Fetch Holidays  API \r\n//const allEventsRef = useRef(allEvents);\r\nconst storedTodos=JSON.parse(localStorage.getItem(LocalStorage))\r\n\r\nuseEffect(() => {\r\n  //console.log('allEventsRef.current',allEventsRef.current);\r\n // if (allEvents !== allEventsRef.current) {\r\n\r\n  let year=moment(\"2021\").format('YYYY')\r\n  axios(`https://sholiday.faboul.se/dagar/v2.1/`+year)\r\n  .then(response => {\r\n  \r\n   const holDay=response.data.dagar.filter(holiday=>holiday.helgdag)\r\n   .map(function(holidayEvents){\r\n     return{ title:holidayEvents.helgdag , start: holidayEvents.datum , id:v4() , done:false ,holiday:'Ja' }\r\n   })\r\n   console.log('holDay',holDay);\r\n   setAllEvents(holDay) \r\n\r\n     console.log('allEvents ', allEvents)\r\n      \r\n          });\r\n    // }   \r\n  },[storedTodos]) \r\n\r\n\r\n\r\n// Store events to Local storage \r\n\r\n useEffect(()=>{\r\n\r\n  const storedTodos=JSON.parse(localStorage.getItem(LocalStorage))\r\n  console.log('storedToDoes:',storedTodos);\r\n  if (storedTodos)\r\n   setAllEvents(storedTodos)\r\n   console.log('saved storage',localStorage.getItem(LocalStorage));\r\n \r\n},[])\r\n  \r\n\r\n\r\n useEffect(()=>{\r\n  localStorage.setItem(LocalStorage , JSON.stringify(allEvents))\r\n   console.log('localstorage',localStorage.getItem(LocalStorage));\r\n\r\n },[allEvents])\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Function for adding new event on clicking Add Event button \r\nfunction handleAddEvent(){\r\n   if(newEvent.title){\r\n      setAllEvents(prevAllEvents =>{\r\n      return [...prevAllEvents , {title:newEvent.title,  start:newEvent.start  ,id:v4() , workDay:'Ja', done:false}]\r\n      })\r\n   click++   \r\n   } \r\n}\r\n\r\n\r\n//Function for deleting done  events on clickind clear Event button \r\n\r\nconst handleClearEvent = ()=>{\r\n  const clearDoneEvent=allEvents.filter(clearEvents=>!clearEvents.done )\r\n  setAllEvents(clearDoneEvent)\r\n}\r\n\r\n// Function for changing the events status to done \r\nfunction toggleTodo(id){\r\n  const toggleEvents=[... allEvents]\r\n  \r\n  const doneEvent=toggleEvents.find(doneEvent=> doneEvent.id ===id )\r\n  doneEvent.done =! doneEvent.done\r\n  setAllEvents(toggleEvents)\r\n}\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Form  newEvent={newEvent} handleAddEvent={handleAddEvent} setNewEvent={setNewEvent}/>\r\n      <Calendar localizer={localizer} events={allEvents}  \r\n           startAccessor =\"start\" endAccessor=\"start\" style={{height:500 , marginLeft:\"150px\" ,  marginRight:\"150px\" ,  marginBottom:\"50px\"}} value={allEvents.title} eventPropGetter={eventPropGetter}\r\n      />\r\n      <div style={{margin:'0PX 10% 50PX 10%' ,width:'80%' ,boxShadow:'10px 10px 10px 10px black',background:'lightgray',fontSize:'20px' }}>\r\n          <div style={{fontWeight:'bold',fontSize:'20px' ,boxShadow:'5px 5px 5px 5px black'}}>\r\n                {allEvents.filter(allEvents=>{return(!allEvents.done && allEvents.workDay)}).length} left to do \r\n                {console.log(allEvents)}\r\n          \r\n          </div>\r\n          <br/>\r\n          < TodoList allEvents={allEvents.filter(events=>events.workDay)} toggleTodo={toggleTodo}  />\r\n          <button onClick={handleClearEvent} style={{margin:'50PX 30% 50PX 25%' ,width:'50%' ,boxShadow:'10px 10px 10px 10px black'  ,fontWeight:'bold',  fontSize:'20px' , borderRadius:'10px'}}> Clear Done Events\r\n          </button>\r\n          <br/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}