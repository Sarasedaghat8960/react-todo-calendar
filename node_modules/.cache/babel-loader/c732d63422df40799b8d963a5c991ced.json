{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\githup\\\\React\\\\TodoCalender\\\\react-todo-calendar\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfDay';\nimport getDay from 'date-fns/getDay';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport React, { useState, useEffect, Component } from 'react';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport sv from \"date-fns/locale/sv\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TodoList from './TodoList';\nimport { v4 } from 'uuid';\nimport moment from 'moment';\nimport Form from './Form';\nimport axios from 'axios';\nimport { lastDayOfMonth } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"sv\", sv);\nconst locales = {\n  \"sv\": sv\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst LocalStorage = 'TodoApp';\n\nfunction App() {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({\n    title: \"\",\n    start: \"\",\n    done: false,\n    holiday: 'No'\n  });\n  const [allEvents, setAllEvents] = useState([]);\n  const [allHolidays, setAllHolidays] = useState([]);\n  const [localStor, setLocalStor] = useState(storedTodos);\n  let count = 0;\n  let click = 0;\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LocalStorage)); // console.log('storedToDoes:',storedTodos);\n    //if (storedTodos)\n\n    setAllEvents(storedTodos);\n    console.log('saved storage', localStorage.getItem(LocalStorage));\n  }, [click]);\n  useEffect(() => {\n    localStorage.setItem(LocalStorage, JSON.stringify(allEvents));\n    console.log('localstorage', JSON.stringify(allEvents));\n  }, [allEvents]); // //Holidays  API ?????????????\n\n  useEffect(() => {\n    let year = moment(\"2021\").format('YYYY');\n    axios(`https://sholiday.faboul.se/dagar/v2.1/` + year).then(response => {\n      const holDay = response.data.dagar.filter(holiday => holiday.helgdag).map(function (holidayEvents) {\n        return {\n          title: holidayEvents.helgdag,\n          start: holidayEvents.datum,\n          id: v4(),\n          done: true,\n          holiday: 'Ja'\n        };\n      });\n      console.log('holDay', holDay);\n      setAllEvents(holDay);\n      console.log('allEvents ', allEvents);\n    });\n  }, [count]); // Store events to Local storage \n  // useEffect(()=>{\n  //   const storedTodos=()=>JSON.parse(localStorage.getItem(LocalStorage))\n  //  // console.log('storedToDoes:',storedTodos);\n  //   //if (storedTodos)\n  //    setAllEvents(storedTodos)\n  //    console.log('saved storage',localStorage.getItem(LocalStorage));\n  // },[click])\n  // useEffect(()=>{\n  //   localStorage.setItem(LocalStorage , JSON.stringify(allEvents))\n  //   console.log('localstorage',localStorage.getItem(LocalStorage));\n  // },[allEvents])\n  //Function for adding new event on clicking Add Event button \n\n  function handleAddEvent() {\n    if (newEvent.title) {\n      setAllEvents(prevAllEvents => {\n        return [...prevAllEvents, {\n          title: newEvent.title,\n          start: newEvent.start,\n          id: v4(),\n          holiday: 'No',\n          done: false\n        }];\n      });\n      click++;\n    }\n  } //Function for deleting done  events on clickind clear Event button \n\n\n  const handleClearEvent = () => {\n    const clearDoneEvent = allEvents.filter(clearEvents => !clearEvents.done);\n    setAllEvents(clearDoneEvent);\n  }; // Function for changing the events status to done \n\n\n  function toggleTodo(id) {\n    const toggleEvents = [...allEvents];\n    const doneEvent = toggleEvents.find(doneEvent => doneEvent.id === id);\n    doneEvent.done = !doneEvent.done;\n    setAllEvents(toggleEvents);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      newEvent: newEvent,\n      handleAddEvent: handleAddEvent,\n      setNewEvent: setNewEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: allEvents,\n      startAccessor: \"start\",\n      endAccessor: \"start\",\n      style: {\n        height: 500,\n        margin: \"150px\"\n      },\n      value: allEvents.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '100px',\n        width: '80%',\n        boxShadow: '10px 10px 10px 10px black',\n        background: 'lightgray',\n        fontSize: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '20px',\n          boxShadow: '5px 5px 5px 5px black',\n          background: 'lightgray'\n        },\n        children: [allEvents.filter(allEvents => !allEvents.done).length, \" left to do\", console.log(allEvents)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        allEvents: allEvents,\n        toggleTodo: toggleTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearEvent,\n        style: {\n          margin: '100px',\n          width: '50%',\n          boxShadow: '10px 10px 10px 10px black',\n          fontWeight: 'bold',\n          fontSize: '20px'\n        },\n        children: \" Clear Done Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zfMimYIA83oaEDffXPCWbo4Unag=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/githup/React/TodoCalender/react-todo-calendar/src/App.js"],"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","React","useState","useEffect","Component","DatePicker","registerLocale","sv","TodoList","v4","moment","Form","axios","lastDayOfMonth","locales","localizer","LocalStorage","App","newEvent","setNewEvent","title","start","done","holiday","allEvents","setAllEvents","allHolidays","setAllHolidays","localStor","setLocalStor","storedTodos","count","click","JSON","localStorage","getItem","console","log","setItem","stringify","year","then","response","holDay","data","dagar","filter","helgdag","map","holidayEvents","datum","id","handleAddEvent","prevAllEvents","handleClearEvent","clearDoneEvent","clearEvents","toggleTodo","toggleEvents","doneEvent","find","height","margin","marginLeft","width","boxShadow","background","fontSize","fontWeight","length"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport {Calendar , dateFnsLocalizer} from 'react-big-calendar';\r\nimport format from 'date-fns/format';\r\nimport parse from 'date-fns/parse';\r\nimport startOfWeek from 'date-fns/startOfDay';\r\nimport getDay from 'date-fns/getDay';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport React, {useState, useEffect,  Component } from 'react';\r\nimport DatePicker ,{registerLocale} from 'react-datepicker';\r\nimport sv from \"date-fns/locale/sv\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport TodoList from './TodoList';\r\nimport { v4 } from 'uuid';\r\nimport moment from 'moment';\r\nimport Form from './Form';\r\nimport axios from 'axios'\r\nimport { lastDayOfMonth } from 'date-fns';\r\nregisterLocale(\"sv\", sv);\r\n\r\n\r\nconst locales = {\r\n\r\n  \"sv\" :sv\r\n}\r\n\r\nconst localizer = dateFnsLocalizer({\r\n  format,\r\n  parse,\r\n  startOfWeek,\r\n  getDay,\r\n  locales\r\n})\r\n\r\n\r\n\r\nconst LocalStorage ='TodoApp'\r\n\r\n  \r\n\r\n function App() {\r\n\r\n   const [newEvent, setNewEvent] = useState({title:\"\", start:\"\"  , done:false , holiday:'No' ,})\r\n   const [allEvents, setAllEvents] = useState([])\r\n   const [allHolidays, setAllHolidays] = useState([])\r\n   const [localStor,setLocalStor]=useState(storedTodos)\r\n   let count=0\r\n   let click=0\r\n   \r\n   useEffect(()=>{\r\n\r\n    const storedTodos=JSON.parse(localStorage.getItem(LocalStorage))\r\n   // console.log('storedToDoes:',storedTodos);\r\n    //if (storedTodos)\r\n     setAllEvents(storedTodos)\r\n     console.log('saved storage',localStorage.getItem(LocalStorage));\r\n    \r\n  },[click])\r\n  \r\n  useEffect(()=>{\r\n  localStorage.setItem(LocalStorage , JSON.stringify(allEvents))\r\n    console.log('localstorage',JSON.stringify(allEvents));\r\n  \r\n  },[allEvents])\r\n  \r\n\r\n\r\n\r\n\r\n// //Holidays  API ?????????????\r\n\r\nuseEffect(() => {\r\n  let year=moment(\"2021\").format('YYYY')\r\n  axios(`https://sholiday.faboul.se/dagar/v2.1/`+ year)\r\n  .then(response => {\r\n  \r\n   const holDay=response.data.dagar.filter(holiday=>holiday.helgdag)\r\n   .map(function(holidayEvents){\r\n     return{ title:holidayEvents.helgdag , start: holidayEvents.datum , id:v4() , done:true ,holiday:'Ja' }\r\n   })\r\n   console.log('holDay',holDay);\r\n   setAllEvents(holDay) \r\n     console.log('allEvents ', allEvents)\r\n      \r\n          });\r\n  },[count]) \r\n\r\n\r\n\r\n// Store events to Local storage \r\n\r\n// useEffect(()=>{\r\n\r\n//   const storedTodos=()=>JSON.parse(localStorage.getItem(LocalStorage))\r\n//  // console.log('storedToDoes:',storedTodos);\r\n//   //if (storedTodos)\r\n//    setAllEvents(storedTodos)\r\n//    console.log('saved storage',localStorage.getItem(LocalStorage));\r\n  \r\n// },[click])\r\n\r\n// useEffect(()=>{\r\n//   localStorage.setItem(LocalStorage , JSON.stringify(allEvents))\r\n//   console.log('localstorage',localStorage.getItem(LocalStorage));\r\n\r\n// },[allEvents])\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Function for adding new event on clicking Add Event button \r\nfunction handleAddEvent(){\r\n   if(newEvent.title){\r\n      setAllEvents(prevAllEvents =>{\r\n      return [...prevAllEvents , {title:newEvent.title,  start:newEvent.start  ,id:v4() , holiday:'No', done:false}]\r\n      })\r\n   click++   \r\n   } \r\n}\r\n\r\n\r\n//Function for deleting done  events on clickind clear Event button \r\n\r\nconst handleClearEvent = ()=>{\r\n  const clearDoneEvent=allEvents.filter(clearEvents=>!clearEvents.done)\r\n  setAllEvents(clearDoneEvent)\r\n}\r\n\r\n// Function for changing the events status to done \r\nfunction toggleTodo(id){\r\n  const toggleEvents=[... allEvents]\r\n  \r\n  const doneEvent=toggleEvents.find(doneEvent=> doneEvent.id ===id )\r\n  doneEvent.done =! doneEvent.done\r\n  setAllEvents(toggleEvents)\r\n}\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Form  newEvent={newEvent} handleAddEvent={handleAddEvent} setNewEvent={setNewEvent}/>\r\n      <Calendar localizer={localizer} events={allEvents} \r\n           startAccessor =\"start\" endAccessor=\"start\" style={{height:500 , margin:\"150px\"}} value={allEvents.title} \r\n      />\r\n      <div style={{marginLeft:'100px' ,width:'80%' ,boxShadow:'10px 10px 10px 10px black',background:'lightgray',fontSize:'20px' }}>\r\n          <div style={{fontWeight:'bold',fontSize:'20px' ,boxShadow:'5px 5px 5px 5px black',background:'lightgray'}}>\r\n                {allEvents.filter(allEvents=>!allEvents.done).length} left to do \r\n                {console.log(allEvents)}\r\n          \r\n          </div>\r\n          <br/>\r\n          < TodoList allEvents={allEvents} toggleTodo={toggleTodo}  />\r\n          <button onClick={handleClearEvent} style={{margin:'100px' ,width:'50%' ,boxShadow:'10px 10px 10px 10px black',\r\n            fontWeight:'bold',  fontSize:'20px' }}> Clear Done Events\r\n          </button>\r\n          <br/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}